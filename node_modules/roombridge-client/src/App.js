import React, { useState, useEffect } from "react";
import { BrowserRouter as Router, Route, Routes } from "react-router-dom";
import MainPage from "./pages/main";
import Reviews from "./pages/reviews";
import PageNotFound from "./pages/notFound";
import AddRoomAvail from "./components/AddRoomAvailModal";
import "./output.css";
import "./App.css";
import RegisterUser from "./pages/register-user";
import Questionaries from "./components/FindRoomModal";
import RecommendedUsers from "./pages/recommended-users";
import LoginUser from "./pages/login";
import ListEvents from "./pages/list-events";
import ProfilePage from "./pages/profile";
import ListingDetails from "./pages/listing-details";
import Bill from "./components/billing/Bill";
import TopNavbar from "./components/navbar/topNavbar";
import Protected from "./components/Protected";
import SingleEvent from "./pages/single-page-event";
import TelegramAuthCallback from "./TelegramAuthCallback";
import Dashboard from "./components/ui/Dashboard";


export default function App() {
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    // Simulate loading time (you can replace this with actual loading logic)
    const timer = setTimeout(() => {
      setLoading(false);
    }, 4000); // 4 seconds loading time

    return () => clearTimeout(timer);
  }, []);

  return (
    <>
      {/* Cyberpunk DNA Helix Preloader */}
      {loading && (
        <div className={`morph-preloader ${!loading ? 'fade-out' : ''}`}>
          {/* Animated Grid Background */}
          <div className="grid-background"></div>
          
          {/* Laser Beams */}
          <div className="laser-beam beam-1"></div>
          <div className="laser-beam beam-2"></div>
          <div className="laser-beam beam-3"></div>
          
          <div className="preloader-title">RoomBridge</div>
          
          <div className="morph-shape">
            {/* DNA Strands */}
            <div className="dna-strand strand-1"></div>
            <div className="dna-strand strand-2"></div>
            <div className="dna-strand strand-3"></div>
            
            {/* Central Energy Core */}
            <div className="energy-core"></div>
            
            {/* Floating Energy Particles */}
            <div className="energy-particle particle-1"></div>
            <div className="energy-particle particle-2"></div>
            <div className="energy-particle particle-3"></div>
            <div className="energy-particle particle-4"></div>
          </div>
          
          <div className="preloader-subtitle">⚡ INITIALIZING QUANTUM BRIDGE ⚡</div>
          
          {/* Digital Loading Progress */}
          <div className="loading-progress">
            <div className="progress-bar"></div>
          </div>
          <div className="progress-text">LOADING...</div>
        </div>
      )}

      <Router>
        {/* Animated Background */}
        <div className="animated-background"></div>
        
        {/* Floating Orbs */}
        <div className="floating-orbs">
          <div className="orb"></div>
          <div className="orb"></div>
          <div className="orb"></div>
          <div className="orb"></div>
          <div className="orb"></div>
        </div>
        
        {/* Twinkling Particles */}
        <div className="particles">
          {[...Array(50)].map((_, i) => (
            <div 
              key={i}
              className="particle"
              style={{
                left: `${Math.random() * 100}%`,
                top: `${Math.random() * 100}%`,
                animationDelay: `${Math.random() * 3}s`,
                animationDuration: `${2 + Math.random() * 2}s`
              }}
            ></div>
          ))}
        </div>
        
        {/* Content Overlay */}
        <div className="content-overlay">
          <TopNavbar/>
          <Routes>
            <Route path="/" element={<MainPage />} />
            <Route path="/dashboard" element={<Protected Component={Dashboard} />} />
            <Route path="/review" element={<Protected Component={Reviews} />} />
            <Route path="*" element={<PageNotFound />} />
            <Route path="/register-user" element={<RegisterUser />} />
            <Route path="/generate-list" element={< Protected Component={RecommendedUsers} title={"Listed Users"} />} />  
            <Route path="/listed-rooms" element={<Protected Component={RecommendedUsers} title="Listed Rooms" />} />
            <Route path="/login" element={<LoginUser />} />  
            <Route path="/events" element={<Protected Component={ListEvents} />} />
            <Route path="/profile" element={<Protected Component={ProfilePage} />} />
            <Route path="/listing-details/:userId" element={<Protected Component={ListingDetails} />} />
            <Route path="/billing" element={<Protected Component={Bill}/>} />
            <Route path="/single-page-event" element={<SingleEvent />} />
            <Route path="/telegram-auth-callback" element={<TelegramAuthCallback />} />
          </Routes>
        </div>
      </Router>
    </>
  );
}
